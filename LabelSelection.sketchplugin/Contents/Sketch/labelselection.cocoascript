/**
 * Copyright (c) 2017 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Jens von Pilgrim - Initial implementation
 */

var LABELFONTSIZE = 48;
var YELLOWBACKGROUND = "#FCF59D";
var GREENBACKGROUND = "#A3FFAC";
var REDBACKGROUND = "#FCB0B0";
var BLUEBACKGROUND = "#A3DFFF";
var OPACITY = 0.5;
var LABEL_SELECTIONS_GROUP_NAME = "_LabelSelections_"

var labelSelectionYellow = function(context) {
	doLabelSelection(context, YELLOWBACKGROUND)
}
var labelSelectionRed = function(context) {
	doLabelSelection(context, REDBACKGROUND)
}
var labelSelectionGreen = function(context) {
	doLabelSelection(context, GREENBACKGROUND)
}
var labelSelectionBlue = function(context) {
	doLabelSelection(context, BLUEBACKGROUND)
}

// for testing:
labelSelectionYellow(context);

function doLabelSelection(context, color) {
	var doc            = context.document;

	var selectedLayers = context.selection;
	var selectedCount  = selectedLayers.count();
	var firstLayer     = selectedLayers.firstObject();

	if (selectedCount == 0) {
		doc.displayMessage('Nothing selected');
	} else {
		var parent = firstLayer.parentGroup();
		var frame = firstLayer.frame();
		var left = frame.x();
		var right = frame.x()+frame.width();
		var top = frame.y();
		var bottom = frame.y()+frame.height();
		var name = getName(firstLayer.name());
		if (name==null) {
			return; //canceled
		}
		firstLayer.setIsSelected(false);
		for (var i = 1; i < selectedCount; i++){
			frame = selectedLayers[i].frame();
			left = Math.min(left,frame.x());
			right = Math.max(right,frame.x()+frame.width());
			top = Math.min(top,frame.y());
			bottom = Math.max(bottom,frame.y()+frame.height());
			if (name=="") name=selectedLayers[i].name();
			selectedLayers[i].setIsSelected(false);
		}
		if (name==undefined || name=="") name="Label";
		addLabelAndText(parent, name, left, top, right-left, bottom-top, color);
	}

	function addLabelAndText(parent, name, posX, posY, width, height, color) {
		var subPaddingX = 0;
		var subPaddingY = 0;
		var paddingX    = 0;
		var paddingY    = 0;
		
		// padding, not used yet
		var paddingWidth  = paddingX + subPaddingX;
		var paddingHeight = paddingY + subPaddingY;
		width             = width + paddingWidth;
		height            = height + paddingHeight;
		posX -= (paddingWidth / 2);
		posY -= (paddingHeight / 2);

		var top = parent;
        while (top.class() != MSArtboardGroup && top.parentGroup()) {
			var tX = top.frame().x();
			var tY = top.frame().y();
			posX += tX;
			posY += tY;
			top = top.parentGroup();
		}

		var rect = MSRectangleShape.alloc().init();
		rect.frame = MSRect.rectWithRect(NSMakeRect(posX, posY, width, height));

		var shapeGroup = MSShapeGroup.shapeWithPath(rect);
		var fill = shapeGroup.style().addStylePartOfType(0);
		fill.color = MSImmutableColor.colorWithSVGString(color).newMutableCounterpart()
		fill.setOpacity(OPACITY)
		shapeGroup.name = name + "_Rect";

		var text = MSTextLayer.alloc().init();
		text.stringValue = name;
		text.frame = MSRect.rectWithRect(NSMakeRect(posX, posY, width, LABELFONTSIZE*1.5));
		text.fontSize = LABELFONTSIZE;
		text.name = name +"_Text";

		var group = MSLayerGroup.alloc().init();
		group.addLayers([shapeGroup, text]);
		group.name = "Highlight_" + name;

        var labelSelections = findOrCreateLabelSelections(top);
        labelSelections.addLayers([group]);
        
		group.setIsSelected(true);
		
	}

	function findOrCreateLabelSelections(top) {
		for (var i = 0; i<top.containedLayersCount(); i++) {
            var child = top.layerAtIndex(i);
            log(child.name())
            if (child.name()==LABEL_SELECTIONS_GROUP_NAME) {
            	return child;
            }
        }
        var group = MSLayerGroup.alloc().init();
		group.name = LABEL_SELECTIONS_GROUP_NAME;
		top.addLayers([group]);
		return group;
    }

    function getName(defaultName) {
  		var dlg = COSAlertWindow.new();
  		dlg.setMessageText("Name of selected component")
  		dlg.addButtonWithTitle("Ok");
  		dlg.addButtonWithTitle("Cancel");

  		// Create the main view
		var dx = 300;
		var dy = 140;
		var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, dx, dy));
		dlg.addAccessoryView(view);

		var label = NSTextField.alloc().initWithFrame(NSMakeRect(0, dy - 20, (dx / 2) - 8, 20));
		label.setStringValue("Name: ");
		label.setSelectable(false);
		label.setEditable(false);
		label.setBezeled(false);
		label.setDrawsBackground(false);
		
		view.addSubview(label);
		field = NSTextField.alloc().initWithFrame(NSMakeRect(0, dy - 40, (dx / 2) - 8, 20));
		view.addSubview(field);
		field.setStringValue(defaultName);
		
		if (dlg.runModal()==1000) {
			return field.stringValue();
		}
		return null;
	}
}
